/*
 * 株式会社 HUVRID / WP theme template
 */


 - 目次 -

01.0 - header.php -
02.0 - index.php -
03.0 - front-page.php -
04.0 - footer.php -
05.0 - page.php -
05.1 - page/tmpl.php -
05.2 - page/loop-tmpl.php -
06.0 - archive.php -
07.0 - search.php -
08.0 - searchform.php -
09.0 - single.php -

 - function -
fn.01 - 概要

 - MarkDown -
https://github.com/kazuto-matayoshi/huv-tmp



=======================================================================================================

01.0 - header.php -

=======================================================================================================

共通headerを表示処理をするファイルです。

プラグイン( All In One SEO Pack )を使うことで
meta周りの調整は済むようになっています。

制作していく際は
・cssの追加
・共通headerの追加
などが主なカスタマイズになります。


<*-- 吐き出し例 --*>

<!DOCTYPE html>
<html lang="ja">
	<head>
		<meta charset="UTF-8">
		<title></title>
		<!-- icon -->
		<link rel="shortcut icon" href="/img/favicon.ico">

		<!-- IE対策 -->
		<meta http-equiv="X-UA-Compatible" content="IE=edge">

		<!-- その他設定 -->
		<meta name="format-detection" content="telephone=no">
		<meta name="viewport" content="width=device-width">

		<!-- CSS -->
		<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
		<link rel="stylesheet" href="/css/normalize.css">
		<link rel="stylesheet" href="/css/common.css">
		<link rel="stylesheet" href="/css/index.css">
	</head>
<body>










=======================================================================================================

02.0 - index.php -

=======================================================================================================

基本的に使いません。
TOPページの表示処理は
front-page.phpで行います。










=======================================================================================================

03.0 - front-page.php -

=======================================================================================================

TOPページの表示で使います。
初期の記載として、新着を取得するコードを書いています。










=======================================================================================================

04.0 - footer.php -

=======================================================================================================

header.php同様
共通footerを表示処理をするファイルです。

・jQuery CDN(ver.2.2.4)の読み込み
・common.js
・Google Analyticsのサポートをするコード (*1)
が常に読み込まれます。

また、MW-WP-Formを使う際の最低限度のjs(*2)も追加していますので確認お願いします。
※使用する際は<form>の内側に<div class="form_box">を生成してください。

-------------------------------------------------------------------------------------------------------

(*1)のコード
	jQuery(function() {
		var hostname = window.location.hostname;
		var pathname = window.location.pathname;
		var siteURL  = hostname + pathname;

		jQuery("a").click(function(e) {
			var ahref = jQuery(this).attr('href');
			if (ahref.indexOf("siteURL") != -1 || ahref.indexOf("http") == -1 ) {
				ga('send', 'event', '内部リンク', 'クリック', ahref);
			} else {
				ga('send', 'event', '外部リンク', 'クリック', ahref);
			};
		});
	});

-------------------------------------------------------------------------------------------------------


(*2)のコード
	(function($){
		$('.mw_wp_form_input input[name="tell"]').attr( 'type', 'tel' );
		$('select[name="prefectures"] option[value=""]').html( '選択してください' );
		$('.mw_wp_form_preview input[name="tell"]').attr( 'type', 'hidden' );
		$('.mw_wp_form_preview input[type="hidden"]').each(function(){
			if ($(this).val() == "") {
				$(this).parentsUntil(".form_box").hide();
			};
		});
		if ($('.mw_wp_form_preview').length) $('.apply_ttl').hide();
	})(jQuery);

-------------------------------------------------------------------------------------------------------

<*-- 吐き出し例 --*>
<script src="//code.jquery.com/jquery-2.2.4.min.js"></script>
<script src="/js/common.js"></script>
<script>
	jQuery(function() {
		var hostname = window.location.hostname;
		var pathname = window.location.pathname;
		var siteURL  = hostname + pathname;

		jQuery("a").click(function(e) {
			var ahref = jQuery(this).attr('href');
			if (ahref.indexOf("siteURL") != -1 || ahref.indexOf("http") == -1 ) {
				ga('send', 'event', '内部リンク', 'クリック', ahref);
			} else {
				ga('send', 'event', '外部リンク', 'クリック', ahref);
			};
		});
	});
</script>
</body>
</html>










=======================================================================================================

05.0 - page.php -

=======================================================================================================

各固定ページの分岐用のページです。
固定ページを作る際には『(スラッグ名).php』という命名規則で作成してください。

子ページについてですが、作成する際は
『/(テーマディレクトリ)/page/(親スラッグ名)-(子ページのスラッグ名).php』というディレクトリ構成、命名規則で作成してください。

<*-- 例 --*>

テーマ名  -> test-theme
親スラッグ -> parent
子スラッグ -> child

/test-theme/parent-child.php










=======================================================================================================

05.1 - page/tmpl.php -

=======================================================================================================

固定ページのテンプレートです。

-------------------------------------------------------------------------------------------------------

if ( have_posts() ) :
while ( have_posts() ) :
	the_post();
	the_content();
endwhile;
endif;

-------------------------------------------------------------------------------------------------------

上記コードで
固定ページで入力した値を取得します。

このファイルは基本的にごみ扱いなので
不要になった時点で削除してください。

(※リネームでの作業を推奨します。)










=======================================================================================================

05.2 - page/loop-tmpl.php -

=======================================================================================================

固定ページのloop用のテンプレートです。

新着一覧などを利用時にリネームなどしてお使いください。










=======================================================================================================

06.0 - archive.php -

=======================================================================================================

記事のアーカイブを取得し、表示するファイルです。
ポストタイプを判定し、archive/内にファイルがあれば
そのファイルを見に行きます。

なければそのままコンテンツを表示します。
（※404にすべきか検討中）

また、命名規則、ディレクトリ構成は
下記の通りです。

<*-- 例 --*>

/test-theme/archive/投稿タイプ名.php










=======================================================================================================

07.0 - search.php -

=======================================================================================================

検索結果を表示するページのファイルです。
<?php get_search_form(); ?>で後述のsearchform.phpの中身を読み込みます。










=======================================================================================================

08.0 - searchform.php -

=======================================================================================================

前述のsearch.phpで呼び出されるファイルです。

-------------------------------------------------------------------------------------------------------

<form class="select_area" role="search" method="get" action="<?php echo esc_url( home_url() ); ?>/">
	<p class="search_area"><input type="search" value="<?php echo get_search_query(); ?>" name="s" />
	<button type="submit" class="search-submit"><i class="fa fa-search"></i></span></button></p>
</form>

-------------------------------------------------------------------------------------------------------

デフォルトでは上記のコードが入っています。
使用上の注意点としては

・<form>のアクション属性は変更しないでください(不安定の為)
・<input type="search">のname属性は変更しないでください。検索できなくなります。

以上2点です。










=======================================================================================================

09.0 - single.php -

=======================================================================================================

記事詳細を取得し、表示するファイルです。
ポストタイプを判定し、single/内にファイルがあれば
そのファイルを見に行きます。

ない場合は管理画面の投稿画面で入力されたコンテンツが
そのまま表示されます。

命名規則、ディレクトリ構成は下記の通りです。

<*-- 例 --*>

/test-theme/single/投稿タイプ名.php












=======================================================================================================

fn.01 - 概要

=======================================================================================================

関数について記述はすべてfunction内にあります。
テーマと同階層のfunctions.phpはあくまで入り口の役割を担っているのみです。

ファイルを開くとわかると思いますが

head内の表示関係はcreanup.php
管理画面に関係する関数群はinit.php
追加機能はすべてcustom.phpに集約しています。

さらに細かい部分はファイルを見てください。