@charset "utf-8";
//————————————————————————————————————————————
// break point
//————————————————————————————————————————————

@mixin bp ( $type: min, $num1: false, $num2: false ) {
	@if $type != max and $type != min {
		$num2: $num1;
		$num1: $type;
		$type: min;
	}

	@if $type == min {
		$min: $num1;
		$max: $num2;

		@if $max and $max < $min {
			$min: $num2;
			$max: $num1;
		} @else {

		}

		@if $max == false {
			@media screen and (min-width: $min) { @content; }
		} @else {
			@media screen and (min-width: $min) and (max-width: $max) { @content; }
		}
	} @elseif $type == max {
		$min: $num2;
		$max: $num1;

		@if $min and $max < $min {
			$min: $num1;
			$max: $num2;
		}

		@if $min == false {
			@media screen and (max-width: $max) { @content; }
		} @else {
			@media screen and (min-width: $min) and (max-width: $max) { @content; }
		}
	}
}

@mixin breakMax( $max, $min: false ) {
	@if $min == false {
		@media screen and (max-width: $max) { @content; }
	} @else {
		@media screen and (max-width: $max) and (min-width: $min) { @content; }
	}
}

@mixin breakMin( $min, $max: false ) {
	@if $max == false {
		@media screen and (min-width: $min) { @content; }
	} @else {
		@media screen and (max-width: $max) and (min-width: $min) { @content; }
	}
}

//————————————————————————————————————————————
// FontSize
//————————————————————————————————————————————
@mixin fsvw( $type: min, $num1: false, $num2: false ) {
	@include bp( $type, $num1, $num2 ) {
		:root {
			font-size: calc( 100% + ( ( 1vw - .48rem ) * 1.389 ) );
		}
	}
}

//————————————————————————————————————————————
// FontAwesome
//————————————————————————————————————————————

$fa: FontAwesome;

@mixin fa($fontCode) {
	@if str-index($fontCode, '\\' ) {
		content: unquote("\"") + unquote($fontCode) + unquote("\"");
	} @else {
		content: unquote("\"") + unquote(str-insert($fontCode, "\\", 1)) + unquote("\"");
	}
	font-family: $fa;
	line-height: 1;
}

//————————————————————————————————————————————
// icomoon
//————————————————————————————————————————————

// @font-face {
// 	font-family: 'icomoon';
// 	src: url("../fonts/icomoon.eot");
// 	src: url("../fonts/icomoon.eot") format("embedded-opentype"), url("../fonts/icomoon.ttf") format("truetype"), url("../fonts/icomoon.woff") format("woff"), url("../fonts/icomoon.svg") format("svg");
// 	font-weight: normal;
// 	font-style: normal;
// }

$im: icomoon;

@mixin im($fontCode) {
	@if str-index($fontCode, '\\' ) {
		content: unquote("\"") + unquote($fontCode) + unquote("\"");
	} @else {
		content: unquote("\"") + unquote(str-insert($fontCode, "\\", 1)) + unquote("\"");
	}
	font-family: $im;
	line-height: 1;
}

// 上記、$fontCodeの設定詳細は下記URLの『6,7』
// http://qiita.com/nekoneko-wanwan/items/e0f5a71a7d603215bcc3


//————————————————————————————————————————————
//   ／＼
// ／    ＼三角形を作るcss
// ￣￣￣￣
//————————————————————————————————————————————

@mixin tri-base {
	@content;
	width: 0;
	height: 0;
	border-style: solid;
}

// top
@mixin tri-t($width, $height, $color) {
	@content;
	@include tri-base;
	border-width: 0 $height/2 $width $height/2;
	border-color: transparent transparent $color transparent;
}

// right
@mixin tri-r($width, $height, $color) {
	@content;
	@include tri-base;
	border-width: $height/2 0 $height/2 $width;
	border-color: transparent transparent transparent $color;
}

// bottom
@mixin tri-b($width, $height, $color) {
	@content;
	@include tri-base;
	border-width: $width $height/2 0 $height/2;
	border-color: $color transparent transparent transparent;
}

// left
@mixin tri-l($width, $height, $color) {
	@content;
	@include tri-base;
	border-width: $height/2 $width $height/2 0;
	border-color: transparent $color transparent transparent;
}

// top-right
@mixin tri-tr($width, $color) {
	@content;
	@include tri-base;
	border-width: 0 $width $width 0;
	border-color: transparent $color transparent transparent;
}

// bottom-right
@mixin tri-br($width, $color) {
	@content;
	@include tri-base;
	border-width: 0 0 $width $width;
	border-color: transparent transparent $color transparent;
}

// bottom-left
@mixin tri-bl($width, $color) {
	@content;
	@include tri-base;
	border-width: $width 0 0 $width;
	border-color: transparent transparent transparent $color;
}

// top-left
@mixin tri-tl($width, $color) {
	@content;
	@include tri-base;
	border-width: $width $width 0 0;
	border-color: $color transparent transparent transparent;
}

//————————————————————————————————————————————
// グラデーション
//————————————————————————————————————————————

@mixin gradient($direction, $color) {
}